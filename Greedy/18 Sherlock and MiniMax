#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'sherlockAndMinimax' function below.
#
# The function is expected to return an INTEGER.
# The function accepts following parameters:
#  1. INTEGER_ARRAY arr
#  2. INTEGER p
#  3. INTEGER q
#

def sherlockAndMinimax(arr, p, q):
    # Write your code here
    
    arr = sorted(arr)
    
    new_arr = []
    minx = -1
    ans = -1
    
    if p<arr[0]:
        if (arr[0]-p)>minx:
            minx = (arr[0]-p)
            ans = p
    
    if q>arr[-1]:
        if (q-arr[0])>minx:
            minx = (q-arr[-1])
            ans = q
    
    
    for i in range(0, len(arr)-1):
        mid=(arr[i+1]+arr[i])//2
        if mid <= q and mid >= p and (mid - arr[i]) > minx:
            minx = (mid - arr[i])
            ans = mid
        elif mid > q:
            if (q - arr[i]) > minx:
                minx = (q - arr[i])
                ans = q
        elif mid < p:
            if (arr[i + 1] - p) > minx:
                minx = (arr[i + 1] - p)
                ans = p
    
    return ans
            
            
"""
def sherlockAndMinimax(arr, p, q):
    # Write your code here
    
    values = [] 
    min_values = []
    arr=sorted(arr)
    
    for i in range(p,q+1):
    
        temp=[]
        for each in arr:
            temp.append(abs(each-i))
        values.append(temp)
        
    for each in values:
        min_values.append([min(each),each.count(min(each))])
        
    max = -1
    id=-1
    count =0
    
    for i in range(0,len(min_values)):
        if min_values[i][0]>max or min_values.count(min_values[i][1])>count:
            max=min_values[i][0]
            id=i
            count = min_values.count(min_values[i][1])
            
    print(min_values)
    print(values)
            
    return (p+id)
"""
    
        
            

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    arr = list(map(int, input().rstrip().split()))

    first_multiple_input = input().rstrip().split()

    p = int(first_multiple_input[0])

    q = int(first_multiple_input[1])

    result = sherlockAndMinimax(arr, p, q)

    fptr.write(str(result) + '\n')

    fptr.close()
